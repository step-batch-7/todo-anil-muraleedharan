            TO-DO APP
        <- ----------- ->

    -----Requirements------

✅ -> Create one or more to-do list with a title

✅ -> View all the to-do lists

✅ -> Add an item to a to-do list

✅ -> Delete an item from to-do list

✅ -> Mark an item as done and undone

✅ -> Delete a todo list




              TO-DO
        <- ----------- ->

✅ -> Setup the directory structure.

✅ -> Setup a server.

✅ -> Make the basic version of todo homepage.

✅ -> Decide the structure of the database.

✅ -> Make the server to save the contents of the todo when user presses save button.

✅ -> Disallow the user to continue if the title or the task box is empty.

✅ -> Make the server to display all the previous todo lists saved in the database.

✅ -> Display the saved todo lists including the new one on the insertion of new todo.

✅ -> Fix bug - after saving clear the Create todo window contents.

✅ -> Make able to delete an existing todo.

✅ -> Add EsLint and fix the errors.

✅ -> Add a method to save and display that if the task have been done or not.

✅ -> Pull out classes for todo and todoList.

✅ -> Make able to add or delete tasks from already saved task list.

🔄 -> Make the saved task list to editable.



--------------------------------------------------------------------------Started Pairing-------------------------------------------------

# Task to do : 
   
   ✅ -> Refactor server.js and variables should be given according to their purpose
   
   ✅ -> Add functional test.
   
   ✅ -> Reduce the size of css file : group the common part 
   
   ✅ -> Extract the Html part out of script.js , AIM => reduce the size of the file and group the repetitive part
   
   ✅ -> Refactor index.html : Extract css part out
   

# Front End :
  
✅ -> Reduce border intensity 

✅ -> Use soft theme 

✅ -> Choose better border style

✅ -> Layout should work for all screen size

✅ -> Make todo user friendly i.e. easy to use and understandable

🔄 -> For saving todo save button should be nearby. Buttons should be placed near to their place of act


  -----V0.2 Requirements----


✅ -> Edit title: Ability to edit their existing todo list title.

✅ -> Edit tasks: Ability to edit their existing tasks.

✅ -> Search by title:  Search the list by its title words.

✅ -> Search by tasks: Search the todo item by its matched words.

❇️ -> User Todo's: A user can log in and log out off their account and work on their own todos.

❇️ -> Home Page: If not logged in it is a login page else it is the user's todo page/dashboard.



✅ -> Make title editable.

✅ -> Make task editable.

✅ -> Search by title

✅ -> add a search box for title

✅ -> write a script to filter matching todo

✅ -> Search by task

✅ -> Create one more search box for title.

✅ -> Write script to filter matching todo.

✅ -> Move the server from http to express.

 


🔄 -> render page according to the req only don't render whole page
    # make TodoHtml function for one todo
    # make itemHtml for each adding item 
    # remove all other html part 

🔄 -> make a dataStore class that will do the function of reading and writing of content 
  and assigning work to todoList accordingly


🔄 -> Refactor  the req Onload functions
  # remove unnecessary callbacks


🔄 -> create a toggle button for switching between search by task & title

🔄 -> Fix the bug on searching for title and task at a time.


------------------------------------------------------Login Page-------------------------------------------

🔄 -> Link login page to the homepage.
